!!!
html(lang="en")
  head
    meta(charset="uft-8")
    meta(name="description", content="D3 introduction")
    meta(name="author", content="Francesco Occhipinti")
    meta(name="apple-mobile-web-app-capable", content="yes")
    meta(name="apple-mobile-web-app-status-bar-style", content="black-translucent")
    meta(name="viewport", content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no")

    link(rel="stylesheet", href="css/reveal.min.css")
    link(rel="stylesheet", href="css/theme/night.css", id="theme")

    // For syntax highlighting
    link(rel="stylesheet", href="lib/css/zenburn.css")

    style.
      .white h2, .white h3, .white p {
        color: white;
        text-shadow: 0px 0px 30px rgba(0, 0, 0, 1);
      }

    // If the query includes 'print-pdf', use the PDF print sheet
    script.
      document.write( '<link rel="stylesheet" href="css/print/' + ( window.location.search.match( /print-pdf/gi ) ? 'pdf' : 'paper' ) + '.css" type="text/css" media="print">' );

    //- <!--[if lt IE 9]>
    //- <script src="lib/js/html5shiv.js"></script>
    //- <![endif]-->

    title
      About test driven development

  body
    div(class="reveal")
      div(class="slides")

        section

          section

            h1 Test driven development

        section

          section

            h3 why tests?

          section

            p.
            
              normal tests, written after the development, have mainly one
              purpose

            h3.fragment regression

            //- regression image - 

            p.fragment.

              regression tests relief you code by a task: to be similar to
              itself

            p.fragment.

              thus, they enable the code to evolve, without too many worries

          section

            p but tests are terribly boring

            p.fragment and you will never find the time for them

          section

            p i hate boring things

            p.fragment.

              but from May to now, being under pressure, i was able to keep
              developing and at the same time writing 222 test specifications

            p.fragment how?

        section

          section

            h2 the principle

            p.fragment everything is based on an extremely simple principle

          section

            h2.fragment test
            h2.fragment before

          section

            ul

              li write the tests
              li.fragment.
              
                test the tests: run the tests, they should fail and fail in the
                right way

              li.fragment develop
              li.fragment test
              li.fragment develop
              li.fragment test
              li.fragment develop
              li.fragment test...

            p.fragment your tests will tell you when you're done
            p.fragment in a very zen way, your end will meet your principle :D

          section

            p.

              also several test / dev cycles could happen, just keep in mind to
              revert the traditional order

          section

            p.

              every discovered bug, should be handled as a new feature

            p.fragment

              p bug -> fix -- no
              p bug -> test -> fix -- yes

            p.fragment.
            
              that's the only way to slowly eliminate regression problems

        section
            
          section
            
            h2 the wider impact

          section

            p as we said, the principle is simple:

            h5.fragment write the tests

            p.fragment before.

            p.fragment so, the first thing we get, are tests

          section

            p

              important benefit: "what do we want"? first of all

            ul.fragment
              li towards declarative
              li towards literate

          section

            p final consideration, for those with an analytical mind

            p.fragment it's not bullet-proof

            //- spider image

            p.fragment but it helps, a lot

        section
            
          section
            
            h2 tips from experience

          section

            p for the lazy:

            p.fragment expect('')

            p.fragment let the tests write themselves

            p.fragment advantage? regression


          section
            
            p cross fire

            //- cross fire image -

    script(src="lib/js/head.min.js")
    script(src="js/reveal.min.js")
    script.
      // Full list of configuration options available here:
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
        controls: true,
        progress: true,
        history: true,
        center: true,
        theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
        transition: Reveal.getQueryHash().transition || 'linear', // default/cube/page/concave/zoom/linear/fade/none
        transitionSpeed: 'slow',
        // Optional libraries used to extend on reveal.js
        dependencies: [
          { src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
          { src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          { src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          { src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
          { src: 'plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
          { src: 'plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
          // { src: 'plugin/search/search.js', async: true, condition: function() { return !!document.body.classList; } }
          // { src: 'plugin/remotes/remotes.js', async: true, condition: function() { return !!document.body.classList; } }
        ]
      });


!!!
html(lang="en")
  head
    meta(charset="uft-8")
    meta(name="description", content="D3 introduction")
    meta(name="author", content="Francesco Occhipinti")
    meta(name="apple-mobile-web-app-capable", content="yes")
    meta(name="apple-mobile-web-app-status-bar-style", content="black-translucent")
    meta(name="viewport", content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no")

    link(rel="stylesheet", href="css/reveal.min.css")
    link(rel="stylesheet", href="css/theme/sky.css", id="theme")

    // For syntax highlighting
    link(rel="stylesheet", href="lib/css/zenburn.css")

    style.
      .white h2, .white h3, .white p {
        color: white;
        text-shadow: 0px 0px 30px rgba(0, 0, 0, 1);
      }

    // If the query includes 'print-pdf', use the PDF print sheet
    script.
      document.write( '<link rel="stylesheet" href="css/print/' + ( window.location.search.match( /print-pdf/gi ) ? 'pdf' : 'paper' ) + '.css" type="text/css" media="print">' );

    //- <!--[if lt IE 9]>
    //- <script src="lib/js/html5shiv.js"></script>
    //- <![endif]-->

    title
      About test driven development

  body
    div(class="reveal")
      div(class="slides")

        section

          section

            why tests?

          section

            //- regression image - 

            regression tests relief you code by a task: to be similar to itself

        section
            

          section

            the test driven principle

          section

            everything is based on an extremely simple principle:

            write  tests  before

            write the tests
            test the tests: run the tests, they should fail
                and fail in the right way
            develop
            run
            develop
            run

        section
            
          section
            
            wider impact

          section

            --
                important benefit: "what do we want"? first of all
            --
            --

            also several test / dev cycles could happen, just keep in mind to revert the
            traditional order

            - towards declarative
            - towards literate

            bug -> fix -- no
            bug -> test -> fix -- yes

        section
            
          section
            
            tips from experience

          section

            for the lazy:

            expect('')

            let the tests write themselves

            advantage? regression


          section
            
            - cross fire -

    script(src="lib/js/head.min.js")
    script(src="js/reveal.min.js")
    script.
      // Full list of configuration options available here:
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
        controls: true,
        progress: true,
        history: true,
        center: true,
        theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
        transition: Reveal.getQueryHash().transition || 'linear', // default/cube/page/concave/zoom/linear/fade/none
        transitionSpeed: 'slow',
        // Optional libraries used to extend on reveal.js
        dependencies: [
          { src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
          { src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          { src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          { src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
          { src: 'plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
          { src: 'plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
          // { src: 'plugin/search/search.js', async: true, condition: function() { return !!document.body.classList; } }
          // { src: 'plugin/remotes/remotes.js', async: true, condition: function() { return !!document.body.classList; } }
        ]
      });

